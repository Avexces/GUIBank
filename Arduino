  #include <SPI.h>
#include <MFRC522.h>
#include <Keypad.h>

#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN);

const byte ROWS = 4;
const byte COLS = 4;

char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};


//COLS
//ROWS
//Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);


byte rowPins[ROWS] = {2, 3, 4, 5};
byte colPins[COLS] = {6, 7, 8, A0};
Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 

String pasNummer;
String customKey;


void setup()
{

  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();

  SPI.begin();
}

void loop()
{
  while (pasNummer == NULL){
   Serial.println("ahjfdvjhew");
  leesPas();
  Serial.println(pasNummer);
  }
  owen();
  
  

}

void leesPas(){
 byte buffer[18];
 byte len = 18;
 byte block = 1;
 MFRC522::StatusCode status;
 
 
 
 MFRC522::MIFARE_Key key;
 for (byte i = 0; i < 6; i++) {
 key.keyByte[i] = 0xFF; 
 }
 
 
 
 
 if (!mfrc522.PICC_IsNewCardPresent()){
 return;
 }
 
 if (!mfrc522.PICC_ReadCardSerial()) {
 return;
 }



 
 status = mfrc522.PCD_Authenticate(MFRC522::PICC_CMD_MF_AUTH_KEY_A, 1, &key, &(mfrc522.uid)); 
 if (status != MFRC522::STATUS_OK) {
 Serial.print(F("Authentication failed: "));
 Serial.println(mfrc522.GetStatusCodeName(status));
 return;
 }



 
 status = mfrc522.MIFARE_Read( block , buffer, &len );
 if (status != MFRC522::STATUS_OK) {
 Serial.print(F("Reading failed: "));
 Serial.println(mfrc522.GetStatusCodeName(status));
 return;
 }


 
 for (uint8_t k = 0; k < 16; k++) {
 char karakter = char(buffer[k]);
 pasNummer += karakter;
 }
 
 mfrc522.PICC_HaltA();
 mfrc522.PCD_StopCrypto1();

}
 void owen() {
   customKey = customKeypad.getKey();
    if (customKey != NO_KEY) {
    }
    Serial.println(customKey);
}
 
